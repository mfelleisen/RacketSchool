Timestamp,Did the Racket school help you learn about Racket syntax and did you develop skills to work with it?,Did the topics match the advertised description of the week?,Did you learn what you had hoped to learn?,Tell us what you learned that you found most interesting or valuable.,Please share any thoughts that would help us improve future instance of the school.
7/14/2018 12:27:14,4,4,4,define-syntax and #lang brag,More women and people of color
7/14/2018 12:35:51,5,5,5,"I learned a lot about different aspects of designing a language, including parsing and type-checking. It also was a great help to me since I did not encounter these aspects of Racket before.","Prior to the school, setting up a social network page/channel will help students to communicate."
7/14/2018 12:36:20,5,5,5,"I found the types talks really fascinating! I had wanted to learn how to write a typechecker for a while, so it was really great to learn about turnstile. I'm definitely going to write something in it soon.","I'd make the suggested experience a little more forceful. Perhaps heavily encourage people to have a good, up to date knowledge of Racket. Also, if code samples could be posted ahead of time on a GitHub, that'd be awesome."
7/14/2018 12:37:26,5,5,5,Butterick's gradually expanding one concept from very simple to relatively complex was perhaps the most effective session. ,"Steven's intro to type theory and Turnstile was very cool, although he did go a little quickly. All in all, it was a fantastic, educational week. I think more one-on-one time with the instructors to talk about our own projects would've been good!"
7/14/2018 12:49:18,3,3,3,"Working with macros, compile-/runtime interaction during programming.","Having more experience with Racket (or programming with parentheses in general) would have helped during the lab sessions. I had little, and the information on beforehand did not indicate that much experience was actually assumed (which I experienced to be the case)."
7/14/2018 12:51:07,5,4,3,"How to use Racket's advanced metaprogramming features, especially syntax/parse and the tricks and corner cases that make these features hard to learn on your own.","I was disappointed that we didn't cover Redex and Contracts, two tools that would be very useful in my research. We learned how to build a language, but didn't go into language design, or how to build a *good* language. Redex would have helped with that.

In general, I think the school needs to decide up front what background is required to attend the workshop. I'd expect graduate students to understand the basics of context free grammars and type checking, but we spent about a half a day on each topic. Perhaps we could follow the OPLSS model of having a special class before the workshop to catch up people without the required background.

That said, the experience was quite valuable overall, and all of the instructors were excellent. I learned a lot, and will definitely use the tools presented going forward."
7/14/2018 12:53:32,4,4,5,,
7/14/2018 13:15:01,5,5,5,the concept and philosophy of language oriented programming - and that the Racket community is wonderful,"surveys with checkable topics, consistency in breaks, pair less experienced partners with willing and able ‘’mentors.” thanks again for everything!"
7/14/2018 13:27:21,5,5,5,"BRAG, the lex/parse/expand pattern, a suggestion to use racket/gui instead of Racket Web Server + javascript for prototyping.  I also met future colleagues in my pair-programming partners and elsewhere in the classroom.","Except for Thursday, uniformly excellent and entertaining teaching. Steven needed to test his prototype lessons before using them in prime time. Great access to the gurus of Racket."
7/14/2018 13:36:48,5,5,5,"How to effectively use syntax-parse. Understand better the interleaving of compile-time and run-time processing. Exposure to brag grammar language, Turnstile, and various examples of languages has shown me how easy it is to create DSLs on the fly. It has given me confidence to get started on crafting my own LOP solutions.

The lectures have enriched my understanding of what LOP means and has given me immediately applicable insights to my own projects.","I think it would be nice to have some lecture on operational semantics too to give us a flavor of how to rigorously model language semantics and prove properties or invariants.

Voice pacing was rather fast making it harder to fully digest each information package."
7/14/2018 13:42:47,4,4,4,"The idea of language abstraction, and the approach to it through macros","The lab sessions are essential to my learning, and I loved the diverse background of the participants "
7/14/2018 13:55:58,5,5,4,syntax-parse & related macro best practices,"Perhaps multiple learning tracks? Some sections were a bit slow for advanced students, others a bit fast for less experienced students."
7/14/2018 13:57:46,4,4,3,The most interesting part of Racket School for me was learning about the various ways one could quickly and efficiently implement DSLs,More support should be provided to help students with their own projects. 
7/14/2018 14:19:07,5,5,4,Building toy languages helped me understand the allure of LOP,Stephen's session would have been easier to follow if we had done sone prereading on the format of logical proofs. 
7/14/2018 14:20:56,4,5,4,Starting to understand the value of Racket's syntax objects over Lisp macros.,At times if felt like there wasn't much synchronization between teachers and what was being taught on different days.
7/14/2018 14:29:47,5,5,5,how easy it was to make a type-checker and a language and parse syntax. Did not have experience with this before. I also enjoyed Matthias's session for students who plan to pursue a PhD,"I liked the session for persons who plan to pursue a PhD. I wish we had a dedicated Slack channel so we could share information and continue discussions on topics taught during the day and even talk about who is going to dinner where after the workshop was complete. The bagels were really great, as were the lunches :) Oh, if someone happens to have Racket stickers next year....
: ) Thank you for Racket School. I had a great time!"
7/14/2018 15:11:15,5,5,4,Communicating macros,Content matched or slightly exceeded my level - perfect for learning. Organisation was great.
7/14/2018 15:11:16,5,5,5,"The most interesting and valuable thing to me was learning about Racket's facilities for macros: syntax-parse, syntax classes, etc. I enjoyed learning about them and working through the exercises. I especially enjoyed the extended examples on Friday, which both recapped this material and pushed the ideas further. Jay's presentation was especially good at ""pushing"" the ideas further.","(1) Thursday was the most frustrating day for me. I think that the Turnstile material was both the most complicated and the least well explained. (2) The presentation of ""ugly"" languages would benefit from a more sensible example than ""taco/not-a-taco."" (3) There was a wide range of experience among the participants, and I'm not sure if the ""Racket novices"" were able to keep up. One way to help people ""keep up"" would be to offer more interim solutions: if exercise  4 builds on 3, provide a solution to 3 so that everybody can attempt 4. (4) I would have enjoyed more structured social opportunities. I feel that I didn't get to meet very many people that I did not already know. Maybe enforce a rule that you need a new pair-programming partner every session?"
7/14/2018 15:28:31,5,5,5,"The focused practice was invaluable, that gave me the confidence to use macros or make new #langs much more willingly. I also appreciated all the discussions and comments pertaining to 'language vs. library.' I now feel I understand better how Racketeers think about that distinction. (Or rather, the lack thereof.)","I thought it was excellent. I think a showcase of more practical #langs would have been useful as well. (Not necessarily understanding how all of them were implemented, but just getting more of a feel for the kinds of problems others have solved using LOP)"
7/14/2018 15:41:37,3,5,5,How to re-program Racket DSL ( macros/module and production rule ..key concepts and coding abstraction ),"Experienced ,Racket school 2018 , exceeding my expectation -- friendly and helpful content, amazing passionate scientific teaching group."
7/14/2018 15:57:26,5,5,4,"I think I finally understand how to use macros, and Racket macros seem to be much easier to write and debug than CL macros!","I missed having more time to develop our own (and bigger) projects using what we learned.  I understand that fitting this in the schedule might be difficult, but it would be interesting."
7/14/2018 16:41:47,5,5,5,"Being in a setting with a bunch of smart people and hearing other questions asked as the material was presented. It is hard to duplicate that type of experience without being in person.

Just seeing what was possible and getting some hands on experience doing parts of it was very valuable too.

The pair programming and switching pairs was extremely valuable.","On quite a few of the exercises, it was hard to understand exactly what was being asked for. I liked having multiple exercises because we had a range of expertise and this helped make sure that things were small enough that a novice could complete at least one exercise, while allowing the expert to go further. However, many of the exercises were based on the previous exercise being completed correctly and this made it a bit difficult. If you made a mistake it could be like dominoes and keep you from doing the later problems. MB's exercises mostly avoided this problem and that seemed to make things go a bit smoother on those exercises. (Though we should have had tacos on the day he presented. ) 

Everyone was helpful but I especially appreciated Stephen Chang's help over the week. He did a great job of guiding us to answers when we had questions and making sure we understood everything before moving on to help someone else.

A problem set 0 sent out a month ahead of time would probably be well worth it. the link to Quick and the exercise in Beautiful Racket were very helpful and I went through both of those, but I think some problems that were designed specifically for what we were going to be doing each day of class might be a good way to make sure everyone has at least some core experience with what we will be discussing.

Overall it was a great experience. The team did an incredible job of making it valuable to people with a wide range of experience and that is really quite an accomplishment. The week challenged a lot of my ideas about programming languages and the importance of writing code in a way that best expresses the problem domain. It was definitely worth my time coming. Thank you to everyone who made it possible."
7/14/2018 17:51:00,5,5,5,Syntax parse,"Everything was great. However, I feel I should've been better prepared and more experience with Racket before starting the course."
7/14/2018 18:08:23,3,4,4,Particularly enjoyed Matthew Butterick’s sequence of tutorials because they were code driven and approachable. ,"I think the most experienced racket students tended to set the pace, at the expense of newer ones. It would be nice to accommodate to a wider range of experience levels. "
7/14/2018 18:17:53,5,5,5,"Implicit forms, Type systems, Turnstile, and coding type rules",
7/14/2018 19:30:15,5,5,5,Examples of different languages. ,Making decisions on a new language. How to approach in making abitrary language.  
7/14/2018 19:59:47,3,5,4,"I got a sense of how practical developing DSLs was, and a sense of the advantages and disadvantages with respect to APIs. Looking forward to trying a few of my own in Racket. ","The Racket language is super large, and while I had some grasp of LISP languages generally, I felt like my starting point was less than ideal. Just made it a little more tiring and occasionally overwhelming. I left early on the last day for this reason (just wanted a break). It was a great experience though, and I am grateful to have been invited. Thanks to the organizers and presenters. The effort that went into this event was obvious, and I think it was successful as a survey course."
7/15/2018 0:43:33,5,5,4,Full mechanics of Racket macros (from define-syntax to #% forms to #lang) was great to understand.,"1. It would be worth spending the time to cover how macro expansion is implemented in the compiler. Throughout the week, there was a decent amount of hand-waving about run time vs. compile time, phases, etc. but there was never a clear technical explanation of the compiler's mechanics, which I think would have helped clarify my mental model.

2. The type systems day (Thursday) left a lot to be desired. As someone who's taught the same kind of type theory basics before, I thought it was too handwavy to be useful (the fellow adjacent to me I worked with was quite lost). Specific notes:
* The term ""judgment"" was repeatedly referenced but never explained.
* Rules were always presented abstractly without concrete examples, which is backwards. It should be: here's an example expression in the STLC, what type should it be? Then ask what the generalization is. 
* Similarly, without showing full derivations for examples, the purpose of the horizontal inference rules won't make sense to people.
* All of the many assumptions implicit in type judgments should be made explicit, e.g. all metavariables are implicitly quantified with a \forall.
* Having not studied bidirectional type judgments before, I'm still a little confused by them. We talked briefly about how to use them in lecture, but then the example implementation in Racket (not Turnstile) just used essentially (define check compute), which confused me further."
7/15/2018 11:02:31,5,5,5,How macros work and how we can use Racket to create any sort of language.,"It was perfect. If I get an opportunity, I will attend it again"
7/15/2018 12:55:32,5,5,4,the workflow to follow when developing dsl,
7/15/2018 13:42:24,5,5,5,"I learned some of the reasons macros are powerful, and some of the ways they can cause problems.",Having a group outing (like a hike)
7/15/2018 14:25:30,5,5,4,"the 'staged' approach to language development, and the value of cleanly separated phases","i was hoping to see at least one example of a compiler, where we used all the racket machinery, but the final product was code meant to be executed by something entirely independent of racket. (i'll admit, i have no practical idea how that could be squeezed into an already intense course!)"
7/15/2018 18:44:45,4,4,4,The syntax-parse macro was very interesting and the pattern matching aspect seems very valuable. I also the br and brag languages useful for getting up and running quickly.,
7/15/2018 21:34:57,5,5,4,"Define-syntax, syntax-parse, and how to create a language usable via #lang","On Tuesday, Wednesday, and Thursday, I wished that we had started about 25% of the way through the day's material so we could have gotten to the more complex examples in class. I also think it would have been helpful to give us a little more recommended reading so everyone is on the same page for basic racket syntax and functions."
7/15/2018 22:54:30,5,5,5,"I learned a lot about what makes up a language such as a reader and expander, compiler and decompiler. ","It was really hard the first day because I had no where near the experience I needed, but then it got much better."
7/16/2018 6:12:19,3,5,3,I think the most valuable thing that happened was the understanding that Racket could be used right now. We could start moving the level of abstraction up to the languages as soon as we wanted with all sorts of problems.,I would have benefitted from some prep work. A series of exercises to get familiar with Racket.
7/16/2018 6:54:38,5,5,5,The taco compiler was the most fascinating part of the course,Maybe ease students into the course a little bit. Matthias' lecture on Monday was a little rough for everybody.
7/16/2018 7:11:42,5,5,5,The advanced macrology in Jay’s talk. How MB explained parsing.,Have a separate track on advanced topics.
7/16/2018 14:16:57,2,3,2,,"The school lacked focus with a new individual teaching each day. This put a lot of pressure on the individual teaching to cover something substantial during the day. 

You should have one person teach all five days so that s/he has the time to cover a topic in detail and develop coursework around it. Remember, this is Racket School and not RacketCon. The goal here is to teach. The goal is not about covering a large range of topics."
7/16/2018 20:24:53,5,5,5,,
7/16/2018 20:27:19,4,5,4,"i learned a lot about the Racket macro system, which was to a large degree new to me.","Some more well-structured sessions, with slides and definitions."
7/16/2018 20:39:18,4,4,4,lexing and parsing,"probably the prerequisites we need can be improved? I was told to read intro on racket-lang and beautifulracket, and I feel like it's not enough for a beginner like me. After first day, I started previewing lectures and it got better."
7/16/2018 21:01:29,5,5,5,Reconsidering whether unityped languages are useful for learning statically typed programming,More clarity on what level of prior experience with racket is needed (e.g. some people not having seen 'let' before)
7/16/2018 21:42:25,5,5,5,Macro is amazing. The stratification of compile time and run time is genius. LOP is an awesome idea that is worth digging into.,"The lecture and lab sessions were very systematic. If possible, a 3-hour crash course with lab sessions on basic Racket would be extremely helpful to some students."
7/16/2018 21:48:24,5,5,5,"Building languages for ""non-traditional"" purposes (e.g. Haiku generation). The ""Taco"" language examples. The discussion of the Racket philosophy on the last day. The Racket Team taking time to talk with and give advice to students.","Two minor thoughts: Improve the introduction to the macro system overall and the ""big picture"" on the first day. Add another non-s-expr language accessible to a wider audience (maybe a picture drawing language? or finite state machines?)."
7/16/2018 22:39:54,5,5,5,I think I know enough know to begin experimenting.,Make us into syntax objects so we can expand when we return to Earth.
7/16/2018 22:59:33,4,4,3,LOP and #lang,"There was huge variety in participants prior knowledge, making pair programming often difficult"
7/16/2018 23:03:04,3,2,2,I loved the way the summer school was organized. Moreover the way the lecture was structured: lab + tutorial.,
7/16/2018 23:11:14,5,5,5,hands-on introduction to syntax-parse and real cases where it can be used,the pacing was a little brisk for me -- i'd learn a concept and not have a chance to synthesize it before we moved on to more advanced applications of the same
7/16/2018 23:35:38,4,4,4,A working knowledge of Syntax Parse.,Spend more time on difficult topics. Anything that has easy to read docs/tutorials (the beautiful racket stuff) can be left out. I would have been more interested in doing a language design tutorial with an expert end to end. 
7/17/2018 10:13:13,5,5,5,Developed more confidence using syntax-parse; lexers readers and parsers are key to making my own module,"Maybe provide background information so people can read up beforehand, I felt like if I hadn't of had classes on some of the topics (bidirectional typechecking was an assignment back home for me), doing the labs would have been hard to understand/implement"
7/17/2018 10:23:09,5,5,5," * Some of the philosophy behind racket and behind developing your own language in racket, 
 * where to look for documentation (have a better feeling where some of it might be hidden) and help,  
 * how easy it is to develop my own langauge in racket, type systems, 
 * a part of the great community behind racket ","since i was overall so extremely happy I cannot think of anything that would have made it better. A minor irritation was the noise level in the lecture hall during exercises; I can't think of a good way to address this though, as immediate access to experts or other people in the room seems just as desirable as a bit of quiet"
7/17/2018 10:34:52,5,5,5,"Comfort with syntax-parse and the steps involved in creating a #lang. I don't know everything about them, but I can learn the rest on my own. Also liked the variety of examples; they weren't all cut from the same cloth.","A little more advance warning about local arrangements (what food is provided, what the dorm rooms are like) would help. I would have brought certain things along. Also please provide more advance guidance to presenters with less experience."
7/17/2018 10:40:48,5,5,5,Ease of creating new DSLs with Racket,Would be nice to have an e-mail list for students
7/17/2018 13:41:58,5,5,5,The idea of LOP and the power of building DSLs for many applications.,Send out a link to a summer-school-20__ Slack Channel so that we could better organize meetings outside of class time.
7/17/2018 23:27:38,5,5,5,Macros and Hashlangs,You are perfect the way you are.
7/18/2018 13:58:59,5,5,5,"The most valuable for me was the step by step exploration of each of the interposition points. It made it much clearer how to make use of each one of them to modify and extend Racket's behavior beyond macros. Amusingly one of the most useful pieces of information that I learned was splice syntax, which in retrospect should have been obvious from the name, but somehow did not click. More generally on that topic syntax/loc and friends are extremely useful.","In discussion with a number of the other students it seems that there were a couple of stumbling blocks for people. 1. Many were not sufficiently familiar with lisp/scheme family language conventions, having suggested reading outside the Racket guide might be good for this audience and provide them with a bit more historical context. When this context is not provided it often manifests as a feeling of having to fight the language to get it to do what you want, though I'm not sure providing the context would necessarily solve that problem, it may just be something that takes time. 2. Communication resources such as #racket on freenode, the mailing lists, and the racket slack organization were not mentioned. Having a 5 minute introduction to the layout of the Racket community might be helpful before the start of the first lecture.

The split between 'the hard way' and 'the easy way' was very effective for me as a way to put all the pieces together and see how certain macros are not simply magic. This also helped enormously because it makes it easier to identify where certain higher level macros may not fit a use case and provides the tools and knowledge for how to use the underlying parts to build a similar abstraction for another use case."
7/18/2018 21:01:19,4,4,4,Getting “under the hood” of Racket.,"Butterick's course was excellent, and I particularly enjoyed Robby's clear and concise explanations during the labs. Robby's talk walk also the best one – short, concise, and to the point. Flatt was also extremely helpful during the labs. However.. the thing that did not sit so well with me, was Matthias' attitude during his lecture and also from the back row during the other lectures. I found his attitude to be hard, loud, and frequently rude, condescending, and disrespectful. I also thought to myself: “Why so much yelling?” and “Why is he trying to be so funny?” The solution: Come better prepared (like Butterick) and calm down."
7/21/2018 13:41:51,3,4,3,Matthias and Matthew's lectures about the macro system,Try to have more continuity from day to day. 